# -*- coding: utf-8 -*-
"""Tarea 1 Estadística Computacional grupo G-17

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AgNh_HgaBCN0ndgsVYiienkD7i5WG4Ld

Incorporar el desarrollo del Item junto con los comentarios solicitados en celdas independientes. Siga el ejemplo:
*Codigo; Salida de codigo; comentarios*

# Tarea 1

## Integrantes

- Ulysses Barreto
- Diego Espinosa
- Matías Reyes
"""

#cargar datos.
install.packages("readxl")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("moments")

library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(moments)
data=read_xlsx("/content/BASE_FINAL_SEGPRES_ERTM_DA .xlsx")
data=as.data.frame(data)
#data

head(data)

#inputamos datos nulos y los reemplazamos por la media
data <- data %>%
  mutate_if(is.numeric, ~ ifelse(is.na(.), mean(., na.rm = TRUE), .))

head(data)

"""#PREGUNTA 1

1.	Identificar si existen diferencias apreciables de cantidad de funcionarios de planta y funcionarios a contrata + honorarios, considerando los siguientes grupos de municipios

p5.1 = funcionarios de planta
p5.2 = contrata
p5.3 = honorarios

## Desarrollo Item 1.a.

a.	Comunas grandes versus urbanas
"""

data$contratoYhonorario <- data$P5.2 + data$P5.3
comuna_grande <- c(1, 2)
data_grande <- data %>%
  filter(TIP_SUBDERE	%in% comuna_grande) %>%
  select(MUNICIPALIDAD,P5.1, contratoYhonorario)
names(data_grande)[names(data_grande) == "P5.1"] <- "funcionario_planta"
names(data_grande)[names(data_grande) == "MUNICIPALIDAD"] <- "MUNICIPALIDADES_GRANDES"
print(data_grande)
mean(data_grande$funcionario_planta, na.rm = TRUE)
mean(data_grande$contratoYhonorario, na.rm = TRUE)
sd(data_grande$funcionario_planta, na.rm = TRUE)
sd(data_grande$contratoYhonorario, na.rm = TRUE)

comuna_urbana <- c(3, 4)
data_urbana <- data %>%
  filter(TIP_SUBDERE	%in% comuna_urbana) %>%
  select(MUNICIPALIDAD,P5.1, contratoYhonorario)
names(data_urbana)[names(data_urbana) == "P5.1"] <- "funcionario_planta"
names(data_urbana)[names(data_urbana) == "MUNICIPALIDAD"] <- "MUNICIPALIDADES_URBANAS"
print(data_urbana)
mean(data_urbana$funcionario_planta, na.rm = TRUE)
mean(data_urbana$contratoYhonorario, na.rm = TRUE)
sd(data_urbana$funcionario_planta, na.rm = TRUE)
sd(data_urbana$contratoYhonorario, na.rm = TRUE)

t_result <- t.test(data_grande$funcionario_planta, data_urbana$funcionario_planta)
print(t_result)
t_result <- t.test(data_grande$contratoYhonorario, data_urbana$contratoYhonorario)
print(t_result)

data_grande <- data_grande %>% mutate(TipoComuna = "Grande")
data_urbana <- data_urbana %>% mutate(TipoComuna = "Urbana")

data_combined <- bind_rows(data_grande, data_urbana)

data_means <- data_combined %>%
  summarise(
    MeanPlanta = mean(funcionario_planta, na.rm = TRUE),
    MeanContratoHonorarios = mean(contratoYhonorario, na.rm = TRUE),
    .by = TipoComuna
  )

data_long <- data_means %>%
  pivot_longer(cols = c(MeanPlanta, MeanContratoHonorarios),
               names_to = "TipoTrabajador",
               values_to = "MediaTrabajadores")

ggplot(data_long, aes(x = TipoComuna, y = MediaTrabajadores, fill = TipoTrabajador)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparación de Trabajadores por Tipo de Comuna",
       x = "Tipo de Comuna",
       y = "Media de Trabajadores",
       fill = "Categoría de Trabajador") +
  theme_minimal()

"""Comentarios:  En ambos casos, se nota una diferencia significativa entre las comunas grandes y las comunas urbanas gracias a la medición por medio de t.test y su p-value resultante, se aprecia claramente que las comunas grandes tienen mas cantidad de trabajadores por contrato y honorarios que las comunas urbanas, sucediendo lo mismo con los trabajadores de planta. Aedmás, se aprecia que ambas comunas poseen mas trabajadores por contrato y honorarios que trabajadores de planta

## Desarrollo Item 1.b.

b.	Comunas grandes versus semiurbanas y rurales
"""

print(data_grande)
mean(data_grande$funcionario_planta, na.rm = TRUE)
mean(data_grande$contratoYhonorario, na.rm = TRUE)
sd(data_grande$funcionario_planta, na.rm = TRUE)
sd(data_grande$contratoYhonorario, na.rm = TRUE)

comuna_semiurbana <- c(5, 6)
data_semiurbana <- data %>%
  filter(TIP_SUBDERE	%in% comuna_semiurbana) %>%
  select(MUNICIPALIDAD,P5.1, contratoYhonorario)
names(data_semiurbana)[names(data_semiurbana) == "P5.1"] <- "funcionario_planta"
names(data_semiurbana)[names(data_semiurbana) == "MUNICIPALIDAD"] <- "MUNICIPALIDADES_SEMIURBANAS"
print(data_semiurbana)
mean(data_semiurbana$funcionario_planta, na.rm = TRUE)
mean(data_semiurbana$contratoYhonorario, na.rm = TRUE)
sd(data_semiurbana$funcionario_planta, na.rm = TRUE)
sd(data_semiurbana$contratoYhonorario, na.rm = TRUE)

t_result <- t.test(data_grande$funcionario_planta, data_semiurbana$funcionario_planta)
print(t_result)
t_result <- t.test(data_grande$contratoYhonorario, data_semiurbana$contratoYhonorario)
print(t_result)

data_grande <- data_grande %>% mutate(TipoComuna = "Grande")
data_semiurbana <- data_semiurbana %>% mutate(TipoComuna = "SemiUrbana")

data_combined <- bind_rows(data_grande, data_semiurbana)

data_means <- data_combined %>%
  summarise(
    MeanPlanta = mean(funcionario_planta, na.rm = TRUE),
    MeanContratoHonorarios = mean(contratoYhonorario, na.rm = TRUE),
    .by = TipoComuna
  )

data_long <- data_means %>%
  pivot_longer(cols = c(MeanPlanta, MeanContratoHonorarios),
               names_to = "TipoTrabajador",
               values_to = "MediaTrabajadores")

ggplot(data_long, aes(x = TipoComuna, y = MediaTrabajadores, fill = TipoTrabajador)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparación de Trabajadores por Tipo de Comuna",
       x = "Tipo de Comuna",
       y = "Media de Trabajadores",
       fill = "Categoría de Trabajador") +
  theme_minimal()

"""Comentarios:En ambos casos, se nota una diferencia significativa entre las comunas grandes y las comunas semiurbanas y rurales gracias a la medición por medio de t.test y su p-value resultante, se aprecia claramente que las comunas grandes tienen mas cantidad de trabajadores por contrato y honorarios que las comunas semiurbanas, sucediendo lo mismo con los trabajadores de planta. Aedmás, se aprecia que ambas comunas poseen mas trabajadores por contrato y honorarios que trabajadores de planta

## Desarrollo Item 1.c.

c.	Comunas urbanas versus semiurbanas y rurales
"""

print(data_urbana)
mean(data_urbana$funcionario_planta, na.rm = TRUE)
mean(data_urbana$contratoYhonorario, na.rm = TRUE)
sd(data_urbana$funcionario_planta, na.rm = TRUE)
sd(data_urbana$contratoYhonorario, na.rm = TRUE)

print(data_semiurbana)
mean(data_semiurbana$funcionario_planta, na.rm = TRUE)
mean(data_semiurbana$contratoYhonorario, na.rm = TRUE)
sd(data_semiurbana$funcionario_planta, na.rm = TRUE)
sd(data_semiurbana$contratoYhonorario, na.rm = TRUE)

t_result <- t.test(data_urbana$funcionario_planta, data_semiurbana$funcionario_planta)
print(t_result)
t_result <- t.test(data_urbana$contratoYhonorario, data_semiurbana$contratoYhonorario)
print(t_result)

data_urbana <- data_urbana %>% mutate(TipoComuna = "Urbana")
data_semiurbana <- data_semiurbana %>% mutate(TipoComuna = "SemiUrbana")

data_combined <- bind_rows(data_urbana, data_semiurbana)

data_means <- data_combined %>%
  summarise(
    MeanPlanta = mean(funcionario_planta, na.rm = TRUE),
    MeanContratoHonorarios = mean(contratoYhonorario, na.rm = TRUE),
    .by = TipoComuna
  )

data_long <- data_means %>%
  pivot_longer(cols = c(MeanPlanta, MeanContratoHonorarios),
               names_to = "TipoTrabajador",
               values_to = "MediaTrabajadores")

ggplot(data_long, aes(x = TipoComuna, y = MediaTrabajadores, fill = TipoTrabajador)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Comparación de Trabajadores por Tipo de Comuna",
       x = "Tipo de Comuna",
       y = "Media de Trabajadores",
       fill = "Categoría de Trabajador") +
  theme_minimal()

"""Comentarios:En ambos casos, se nota una diferencia significativa entre las comunas urbanas y las comunas semiurbanas y rurales gracias a la medición por medio de t.test y su p-value resultante, se aprecia claramente que las comunas urbanas tienen mas cantidad de trabajadores por contrato y honorarios que las comunas semiurbanas, sucediendo lo mismo con los trabajadores de planta. Aedmás, se aprecia que ambas comunas poseen mas trabajadores por contrato y honorarios que trabajadores de planta

#PREGUNTA 2

2.	Contrastar la distribución de funcionarios por tramo etario, considerando los siguientes grupos de municipios:

## Desarrollo Item 2.a

a.	Comunas grandes versus urbanas
"""

library(dplyr)
library(ggplot2)
library(tidyr)

data_long <- data %>%
  select(TIP_SUBDERE, P7.1, P7.2, P7.3, P7.4, P7.5) %>%
  pivot_longer(cols = starts_with("P7"),
               names_to = "Rango_Edad",
               values_to = "Cantidad") %>%
  mutate(Edad = case_when(
    Rango_Edad == "P7.1" ~ "18-29",
    Rango_Edad == "P7.2" ~ "30-39",
    Rango_Edad == "P7.3" ~ "40-49",
    Rango_Edad == "P7.4" ~ "50-59",
    Rango_Edad == "P7.5" ~ "60+"
  ),
  Grupo = case_when(
    TIP_SUBDERE %in% c(1, 2) ~ "Grandes",
    TIP_SUBDERE %in% c(3, 4) ~ "Urbanas",
    TIP_SUBDERE %in% c(5, 6) ~ "Rurales",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(Grupo))

grupo_grande <- data_long %>% filter(Grupo == "Grandes")
grupo_urbano <- data_long %>% filter(Grupo == "Urbanas")

t_result_grande_urbano <- t.test(grupo_grande$Cantidad, grupo_urbano$Cantidad, na.rm = TRUE)
print("T-test Grandes vs Urbanas:")
print(t_result_grande_urbano)

data_resumida_grande <- grupo_grande %>%
  group_by(Edad) %>%
  summarise(Cantidad_Grandes = sum(Cantidad), .groups = 'drop')

data_resumida_urbana <- grupo_urbano %>%
  group_by(Edad) %>%
  summarise(Cantidad_Urbanas = sum(Cantidad), .groups = 'drop')

combined_grande_urbano <- full_join(data_resumida_urbana, data_resumida_grande, by = "Edad")

combined_grande_urbano[is.na(combined_grande_urbano)] <- 0

ggplot(combined_grande_urbano, aes(x = Edad)) +
  geom_bar(aes(y = Cantidad_Urbanas, fill = "Urbanas"), stat = "identity", position = "dodge") +
  geom_bar(aes(y = Cantidad_Grandes, fill = "Grandes"), stat = "identity", position = "dodge") +
  labs(x = "Rango Etario", y = "Cantidad de Funcionarios",
       title = "Distribución de Funcionarios (Grandes vs Urbanas)") +
  scale_fill_manual(values = c("Grandes" = "blue", "Urbanas" = "orange")) +
  theme_minimal() +
  theme(legend.position = "bottom")

"""Comentarios:

se busca evaluar si hay diferencias significativas en la cantidad de funcionarios entre las comunas grandes (TIP_SUBDERE 1 y 2) y las urbanas (TIP_SUBDERE 3 y 4)

T-test: Se realiza un test t para comparar las medias de las cantidades de funcionarios en cada grupo. Si el valor p es menor a 0.05, se concluye que hay una diferencia estadísticamente significativa entre los dos grupos

## Desarrollo Item 2.b.

b.	Comunas grandes versus semiurbanas y rurales
"""

t_result_grande_rural <- t.test(grupo_grande$Cantidad, grupo_rural$Cantidad, na.rm = TRUE)
print("T-test Grandes vs Rurales:")
print(t_result_grande_rural)

data_resumida_grande_rural <- grupo_grande %>%
  group_by(Edad) %>%
  summarise(Cantidad_Grandes = sum(Cantidad), .groups = 'drop')

combined_grande_rural <- full_join(data_resumida_grande_rural, data_resumida_rural, by = "Edad")

combined_grande_rural[is.na(combined_grande_rural)] <- 0

ggplot(combined_grande_rural, aes(x = Edad)) +
  geom_bar(aes(y = Cantidad_Grandes, fill = "Grandes"), stat = "identity", position = "dodge") +
  geom_bar(aes(y = Cantidad_Rurales, fill = "Rurales"), stat = "identity", position = "dodge") +
  labs(x = "Rango Etario", y = "Cantidad de Funcionarios",
       title = "Distribución de Funcionarios (Grandes vs Rurales)") +
  scale_fill_manual(values = c("Grandes" = "blue", "Rurales" = "green")) +
  theme_minimal() +
  theme(legend.position = "bottom")

"""Comentarios:

se busca evaluar si hay diferencias significativas en la cantidad de funcionarios entre las comunas grandes (TIP_SUBDERE 1 y 2) y las urbanas (TIP_SUBDERE 5 y 6)

T-test: Se realiza un test t para comparar las medias de las cantidades de funcionarios en cada grupo. Si el valor p es menor a 0.05, se concluye que hay una diferencia estadísticamente significativa entre los dos grupos

## Desarrollo Item 2.c.

c.	Comunas urbanas versus semiurbanas y rurales
"""

grupo_rural <- data_long %>% filter(Grupo == "Rurales")

t_result_rural_urbano <- t.test(grupo_rural$Cantidad, grupo_urbano$Cantidad, na.rm = TRUE)
print("T-test Rurales vs Urbanas:")
print(t_result_rural_urbano)

data_resumida_rural <- grupo_rural %>%
  group_by(Edad) %>%
  summarise(Cantidad_Rurales = sum(Cantidad), .groups = 'drop')

combined_rural_urbano <- full_join(data_resumida_urbana, data_resumida_rural, by = "Edad")

combined_rural_urbano[is.na(combined_rural_urbano)] <- 0

ggplot(combined_rural_urbano, aes(x = Edad)) +
  geom_bar(aes(y = Cantidad_Urbanas, fill = "Urbanas"), stat = "identity", position = "dodge") +
  geom_bar(aes(y = Cantidad_Rurales, fill = "Rurales"), stat = "identity", position = "dodge") +
  labs(x = "Rango Etario", y = "Cantidad de Funcionarios",
       title = "Distribución de Funcionarios (Rurales vs Urbanas)") +
  scale_fill_manual(values = c("Urbanas" = "orange", "Rurales" = "green")) +
  theme_minimal() +
  theme(legend.position = "bottom")

"""Comentarios:

se busca evaluar si hay diferencias significativas en la cantidad de funcionarios entre las comunas grandes (TIP_SUBDERE 3 y 4) y las urbanas (TIP_SUBDERE 5 y 6)

T-test: Se realiza un test t para comparar las medias de las cantidades de funcionarios en cada grupo. Si el valor p es menor a 0.05, se concluye que hay una diferencia estadísticamente significativa entre los dos grupos

#PREGUNTA 3

3.	Contrastar la cantidad de computadores por funcionario, considerando los siguientes grupos de municipios:
"""

# Crear una nueva columna que clasifica a los municipios en los tres grupos
data_3 <- data %>%
  mutate(grupo_comuna = case_when(
    TIP_SUBDERE %in% c(1, 2) ~ "Grandes",
    TIP_SUBDERE %in% c(3, 4) ~ "Urbanas",
    TIP_SUBDERE %in% c(5, 6) ~ "Semiurbanas y Rurales"
  ))


# Sumar el número total de funcionarios
data_3 <- data_3 %>%
  mutate(total_funcionarios = P6.1 + P6.2 + P6.3)

# Calcular la cantidad de computadores por funcionario
data_3 <- data_3 %>%
  mutate(computadores_por_funcionario = P22.1 / total_funcionarios)

data_3$computadores_por_funcionario <- as.numeric(data_3$computadores_por_funcionario)

#borramos los datos NA y infinitos de la nueva columna

# 1. Calcular la media de computadores_por_funcionario, excluyendo NA e Inf
media_computadores <- data_3 %>%
  filter(!is.na(computadores_por_funcionario) & !is.infinite(computadores_por_funcionario)) %>%
  summarise(media = mean(computadores_por_funcionario)) %>%
  pull(media)

# 2. Reemplazar NA e Inf por la media calculada
data_3 <- data_3 %>%
  mutate(computadores_por_funcionario = ifelse(is.na(computadores_por_funcionario) | is.infinite(computadores_por_funcionario),
                                               media_computadores,
                                               computadores_por_funcionario))

head(data_3)

"""se procesaron los datos para poder trabajar en las preguntas de la sección 3

## Desarrollo Item 3.a

a.	Comunas grandes versus urbanas
"""

# Filtrar el dataframe para obtener solo las comunas "Urbanas" y "Grandes"
df_filtrado <- data_3 %>%
  filter(grupo_comuna %in% c("Urbanas", "Grandes"))

# Calcular el promedio de computadores por funcionario para cada grupo
promedio_computadores <- df_filtrado %>%
  group_by(grupo_comuna) %>%
  summarise(promedio = mean(computadores_por_funcionario, na.rm = TRUE))

ggplot(promedio_computadores, aes(x = grupo_comuna, y = promedio, fill = grupo_comuna)) +
  geom_bar(stat = "identity") +
  labs(title = "Comparación de Computadores por Funcionario",
       x = "Grupo de Comuna",
       y = "Promedio de Computadores por Funcionario") +
  scale_y_continuous(limits = c(0, max(promedio_computadores$promedio) + 1)) +
  theme_minimal() +
  theme(legend.position = "none")

"""Comentarios: en las comunas grandes se ve una leve pero mayor cantidad de computadores por funcionario en comparación a las comunas urbanas

## Desarrollo Item 3.b

b.	Comunas grandes versus semiurbanas y rurales
"""

# Filtrar el dataframe para obtener solo las comunas "Grandes" y "Semiurbanas y Rurales"
df_filtrado <- data_3 %>%
  filter(grupo_comuna %in% c("Grandes", "Semiurbanas y Rurales"))

# Calcular el promedio de computadores por funcionario para cada grupo
promedio_computadores <- df_filtrado %>%
  group_by(grupo_comuna) %>%
  summarise(promedio = mean(computadores_por_funcionario, na.rm = TRUE))

# Crear el gráfico de barras
ggplot(promedio_computadores, aes(x = grupo_comuna, y = promedio, fill = grupo_comuna)) +
  geom_bar(stat = "identity") +
  labs(title = "Comparación de Computadores por Funcionario",
       x = "Grupo de Comuna",
       y = "Promedio de Computadores por Funcionario") +
  scale_y_continuous(limits = c(0, max(promedio_computadores$promedio) + 1)) +
  theme_minimal() +
  theme(legend.position = "none")

"""En este gráfico las comunas grandes siguen prevaleciendo en la cantidad de computadores en comparación a las comunas rurales

## Desarrollo Item 3.c

c.	Comunas urbanas versus semiurbanas y rurales
"""

# Filtrar el dataframe para obtener solo las comunas "Urbanas" y "Semiurbanas y Rurales"
df_filtrado <- data_3 %>%
  filter(grupo_comuna %in% c("Urbanas", "Semiurbanas y Rurales"))

# Calcular el promedio de computadores por funcionario para cada grupo
promedio_computadores <- df_filtrado %>%
  group_by(grupo_comuna) %>%
  summarise(promedio = mean(computadores_por_funcionario, na.rm = TRUE))

# Crear el gráfico de barras
ggplot(promedio_computadores, aes(x = grupo_comuna, y = promedio, fill = grupo_comuna)) +
  geom_bar(stat = "identity") +
  labs(title = "Comparación de Computadores por Funcionario",
       x = "Grupo de Comuna",
       y = "Promedio de Computadores por Funcionario") +
  scale_y_continuous(limits = c(0, max(promedio_computadores$promedio) + 1)) +
  theme_minimal() +
  theme(legend.position = "none")

"""Se puede ver una observación interesante en este gráfico, ya que curiosamente las comunas urbanas tienen un índice menor de computadores por funcionario en comparación a las comunas urbanas.

#PREGUNTA 4

4.	Muestre y cuantifique la existencia de asimetría en la distribución de cantidad de computadores de escritorio, considerando los siguientes grupos de municipios:
"""

# Crear una nueva columna que clasifica a los municipios en los tres grupos
data_4 <- data %>%
  mutate(grupo_comuna = case_when(
    TIP_SUBDERE %in% c(1, 2) ~ "Grandes",
    TIP_SUBDERE %in% c(3, 4) ~ "Urbanas",
    TIP_SUBDERE %in% c(5, 6) ~ "Semiurbanas y Rurales"
  ))

"""## Desarrollo Item 4.a

a.	Comunas grandes versus urbanas
"""

# se calcula la simetría para las comunas dichas
asimetria_resultados <- data_4 %>%
  filter(grupo_comuna %in% c("Grandes", "Urbanas")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(P22.1, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de computadores por funcionario
ggplot(data_4 %>% filter(grupo_comuna %in% c("Grandes", "Urbanas")),
       aes(x = P22.1, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Computadores de escritorio (Grandes vs Urbanas)",
       x = "Cantidad de computadores",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Grandes" = "blue", "Urbanas" = "orange"))

"""En el análisis se puede observar que hay un hay una mayor cantidad de comunas urbanas, y la cantidad de computadores tiene una distribución relativamente homogénea hacia la izquierda, rondando comunas con cantidad de computadores de los 0 a los 600, mientras que las comunas grandes varían drásticamente de comuna en comuna. Sin embargo, gran mayoría de los datos estan distribuidos hacia la izquierda del gráfico.

## Desarrollo Item 4.b

b.	Comunas grandes versus semiurbanas y rurales
"""

# Filtrar y calcular la asimetría para comunas grandes y semiurbanas y rurales
asimetria_resultados <- data_4 %>%
  filter(grupo_comuna %in% c("Grandes", "Semiurbanas y Rurales")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(P22.1, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de computadores por funcionario
ggplot(data_4 %>% filter(grupo_comuna %in% c("Grandes", "Semiurbanas y Rurales")),
       aes(x = P22.1, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Computadores por Funcionario (Grandes vs Semiurbanas y Rurales)",
       x = "Cantidad de computadores",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Grandes" = "blue", "Semiurbanas y Rurales" = "green"))

"""Se observa inmediatamente que las comunas semiurbanas y rurales poseen pocos computadores en comparación a las comunas grandes. Sin embargo, existen muchas más comunidades rurales que comunas grandes en el país.

## Desarrollo Item 4.c

c.	Comunas urbanas versus semiurbanas y rurales
"""

# Filtrar y calcular la asimetría para comunas urbanas y semiurbanas y rurales
asimetria_resultados <- data_4 %>%
  filter(grupo_comuna %in% c("Urbanas", "Semiurbanas y Rurales")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(P22.1, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de computadores por funcionario
ggplot(data_4 %>% filter(grupo_comuna %in% c("Urbanas", "Semiurbanas y Rurales")),
       aes(x = P22.1, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Computadores por Funcionario (Urbanas vs Semiurbanas y Rurales)",
       x = "Cantidad de Computadores",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Urbanas" = "orange", "Semiurbanas y Rurales" = "green"))

"""Similar al análisis de la 4.b, las comunas rurales tienen una simetría hacia a la izquierda, concentrando la mayoría de sus datos en una cantidad baja de computadores. Mientras las comunas urbanas tienen una leve simetría hacia la izqueirda, pero tiene datos más distribuidos a lo largo del rango del gráfico.

##PREGUNTA 5

5.	Muestre y cuantifique la existencia de asimetría en la distribución de cantidad de trámites disponibles en línea, considerando los siguientes grupos de municipios:
"""

# Crear una nueva columna que clasifica a los municipios en los tres grupos
data_5 <- data %>%
  mutate(grupo_comuna = case_when(
    TIP_SUBDERE %in% c(1, 2) ~ "Grandes",
    TIP_SUBDERE %in% c(3, 4) ~ "Urbanas",
    TIP_SUBDERE %in% c(5, 6) ~ "Semiurbanas y Rurales"
  ))
  data_5$tramites_online <- data$P44.2.1 + data$P44.2.24

"""## Desarrollo Item 5.a

a.	Comunas grandes versus urbanas
"""

# se calcula la simetría para las comunas dichas
asimetria_resultados <- data_5 %>%
  filter(grupo_comuna %in% c("Grandes", "Urbanas")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(tramites_online, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de cantidad de trámites disponibles en línea
ggplot(data_5 %>% filter(grupo_comuna %in% c("Grandes", "Urbanas")),
       aes(x = tramites_online, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Tramites Disponibles en Linea (Grandes vs Urbanas)",
       x = "cantidad de trámites disponibles en línea",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Grandes" = "blue", "Urbanas" = "orange"))

"""comentarios: En el gráfico se puede apreciar una distribución homogenea hacia la izquierda de cantidad de tramites disponibles en linea para las comunas urbanas, lo que indica que tienden a tener pocos a ningún trámite disponible en línea, caso que no sucede con las comuans urbanas, quienes presentan una mayor distribución a lo largo del gráfico asemejandose a un gráfico de campana, dando mas disponibilidad a los tramites en linea

## Desarrollo Item 5.b

b.	Comunas grandes versus semiurbanas y rurales
"""

# Filtrar y calcular la asimetría para comunas grandes y semiurbanas y rurales
asimetria_resultados <- data_5 %>%
  filter(grupo_comuna %in% c("Grandes", "Semiurbanas y Rurales")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(tramites_online, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de cantidad de trámites disponibles en línea
ggplot(data_5 %>% filter(grupo_comuna %in% c("Grandes", "Semiurbanas y Rurales")),
       aes(x = tramites_online, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Tramites Disponibles en Linea (Grandes vs Semiurbanas y Rurales)",
       x = "cantidad de trámites disponibles en línea",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Grandes" = "blue", "Semiurbanas y Rurales" = "green"))

"""comentarios: En el gráfico se puede apreciar que las comunas semiurbanas y rurales presentan muy poca disponibilidad a tramites en linea, presentando una distribución homogenea hacia la izquierda, al contrario de las comunas grandes, que tienen mayor disponibilidad de tramites en línea, con un gráfico que asemeja al de campana

## Desarrollo Item 5.c

c.	Comunas urbanas versus semiurbanas y rurales
"""

# Filtrar y calcular la asimetría para comunas urbanas y semiurbanas y rurales
asimetria_resultados <- data_5 %>%
  filter(grupo_comuna %in% c("Urbanas", "Semiurbanas y Rurales")) %>%
  group_by(grupo_comuna) %>%
  summarise(asimetria = skewness(tramites_online, na.rm = TRUE))

# Mostrar resultados de asimetría
print(asimetria_resultados)

# Crear histogramas para visualizar la distribución de cantidad de trámites disponibles en línea
ggplot(data_5 %>% filter(grupo_comuna %in% c("Urbanas", "Semiurbanas y Rurales")),
       aes(x = tramites_online, fill = grupo_comuna)) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 30) +
  labs(title = "Distribución de Tramites Dsiponibles en Linea (Urbanas vs Semiurbanas y Rurales)",
       x = "cantidad de trámites disponibles en línea",
       y = "Frecuencia") +
  theme_minimal() +
  scale_fill_manual(values = c("Urbanas" = "orange", "Semiurbanas y Rurales" = "green"))

"""comentarios: En el gráfico se aprecia que ambos tipos de comunas presentan una distribución homogenea hacia la izquierda, dando a entender que ambos tipos de comunas presentan casi nula disponibilidad a tramites en linea"""